# Backend to forward HTTP requests
backend be_forward_http
    mode tcp
    description Forward HTTP requests to the HTTP frontend
    server srv_http abns@loopback-http send-proxy-v2

.if defined(HAP_DISABLE_SSL)
.notice "be: Disabling HTTPS loopback back-end forwarder"
.else

# Backend to forward HTTPS requests
backend be_forward_https
    mode tcp
    description Forward HTTPS requests to the HTTP frontend
    server srv_https abns@loopback-https send-proxy-v2

.endif # HAP_DISABLE_SSL

.if defined(HAP_DISABLE_CERTBOT)
.notice "be: Disabling certbot back-end forwarder"
.else

# Backend to serve ACME HTTP-01 challenge requests
backend be_acme_challenge
    mode http
    description certbot ACME HTTP-1 validation endpoint
    server certbot "${CERTBOT_HOST_PORT}" maxconn 20

.endif # HAP_DISABLE_CERTBOT

# Backend to tarpit connections
backend be_tarpit
    mode http
    description Tarpit invalid connections

    stick-table type ip size 1m expire 1m store conn_cur,conn_rate(10s),http_req_rate(10s)

    http-request silent-drop if { src_conn_cur gt 10 }
    http-request silent-drop if { src_conn_cur gt 5 } { src_http_req_rate gt 10 }

    http-request tarpit

# Backend to prometheus web interface
backend be_prometheus
    mode http

    # Set the Via header
    http-response set-header Via "1.1 %[var(txn.serverName)] (Hockey stick)" if { var(txn.serverName) -m found }

    # ~~ URL rewriting rules ~~
    http-request  replace-path ^/monitoring/prometheus/(.*) /\1
    http-response replace-header location (.*)/(\w+) \1/monitoring/prometheus/\2
    # ~~ End of URL rewriting rules ~~

    server prometheus "${PROMETHEUS_HOST_PORT}" maxconn 20

# Backend to apply request and response rewriting rules
backend be_hockeypuck_rewrite
    mode http

    # Set the Via header
    http-response set-header Via "1.1 %[var(txn.serverName)] (Hockey stick)" if { var(txn.serverName) -m found }

    # ~~ URL rewriting rules ~~
    http-request replace-path ^/stats([^\ ]*) /pks/lookup?op=stats\1
    http-request replace-path ^/s/(.*)        /pks/lookup?op=index&options=mr&search=\1
    http-request replace-path ^/search/(.*)   /pks/lookup?op=index&options=mr&search=\1
    http-request replace-path ^/g/(.*)        /pks/lookup?op=get&search=\1
    http-request replace-path ^/get/(.*)      /pks/lookup?op=get&search=\1
    http-request replace-path ^/d/(.*)        /pks/lookup?op=get&options=mr&search=\1
    http-request replace-path ^/download/(.*) /pks/lookup?op=get&options=mr&search=\1
    # ~~ End of URL rewriting rules ~~

    http-request set-header CF-Connecting-IP %[var(txn.clientIP)] if { var(txn.clientIP) -m found }

    server hockeypuck_lb_ddos abns@hockeypuck-ddos send-proxy-v2
